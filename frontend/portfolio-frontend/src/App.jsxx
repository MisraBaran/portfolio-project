import { useEffect, useState } from "react";

const API = "http://localhost:8080/api";

function fmtTRY(n){ return new Intl.NumberFormat("tr-TR",{style:"currency",currency:"TRY"}).format(n); }

export default function App() {
  const [items, setItems] = useState([]);
  const [symbol, setSymbol] = useState("");
  const [quantity, setQuantity] = useState(1);
  const [buyPrice, setBuyPrice] = useState("");

  const load = async () => {
    const res = await fetch(`${API}/stocks`);
    const data = await res.json();
    setItems(data);
  };

  const addStock = async (e) => {
    e.preventDefault();
    await fetch(`${API}/stocks`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ symbol, quantity: Number(quantity), buyPrice: Number(buyPrice) })
    });
    setSymbol(""); setQuantity(1); setBuyPrice("");
    load();
  };

  useEffect(() => {
    load();
    const id = setInterval(load, 10000); // 10 sn'de bir yenile
    return () => clearInterval(id);
  }, []);

  return (
    <div style={{ maxWidth: 900, margin: "24px auto", fontFamily: "system-ui" }}>
      <h1>Portföyüm</h1>

      <form onSubmit={addStock} style={{ display: "flex", gap: 8, marginBottom: 16 }}>
        <input placeholder="Sembol (ASELS)" value={symbol} onChange={e=>setSymbol(e.target.value)} required />
        <input type="number" min="1" value={quantity} onChange={e=>setQuantity(e.target.value)} required />
        <input type="number" step="0.01" min="0.01" placeholder="Alış Fiyatı"
               value={buyPrice} onChange={e=>setBuyPrice(e.target.value)} required />
        <button>Ekle</button>
      </form>

      <table border="1" cellPadding="8" style={{ width: "100%" }}>
        <thead>
          <tr>
            <th>Sembol</th><th>Adet</th><th>Alış</th><th>Son</th><th>Değer</th><th>Kâr/Zarar</th>
          </tr>
        </thead>
        <tbody>
          {items.map(s => {
            const value = Number(s.currentPrice) * Number(s.quantity);
            const pnl = (Number(s.currentPrice) - Number(s.buyPrice)) * Number(s.quantity);
            return (
              <tr key={s.id}>
                <td>{s.symbol}</td>
                <td>{s.quantity}</td>
                <td>{fmtTRY(s.buyPrice)}</td>
                <td>{fmtTRY(s.currentPrice)}</td>
                <td>{fmtTRY(value)}</td>
                <td style={{ color: pnl >= 0 ? "green" : "crimson" }}>{fmtTRY(pnl)}</td>
              </tr>
            );
          })}
        </tbody>
      </table>
    </div>
  );
}

